<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.motechproject</groupId>
        <artifactId>motech</artifactId>
        <version>1.2</version>
        <relativePath>../../../</relativePath>
    </parent>

    <artifactId>motech-tasks</artifactId>
    <name>MOTECH Tasks</name>
    <version>1.2</version>
    <packaging>bundle</packaging>

    <properties>
        <modules.root.dir>${basedir}/../../..</modules.root.dir>
        <swagger.location>${basedir}/src/main/resources/webapp/</swagger.location>
    </properties>
    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>motech-platform-dataservices</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>motech-platform-event</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>motech-platform-server-config</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.bval</groupId>
            <artifactId>org.apache.bval.bundle</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>motech-platform-osgi-web-util</artifactId>
            <version>${project.version}</version>
        </dependency>
        <!-- Test -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>motech-pax-it</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.gemini.blueprint</groupId>
            <artifactId>org.motechproject.gemini-blueprint-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>motech-tasks-test-bundle</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-core</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>com.github.kongchen</groupId>
                <artifactId>swagger-maven-plugin</artifactId>
                <version>3.1.4</version>
                <configuration>
                    <apiSources>
                        <apiSource>
                            <springmvc>true</springmvc>
                            <locations>
                                <location>org.motechproject.tasks.web</location>
                            </locations>
                            <schemes>
                                <scheme>http</scheme>
                            </schemes>
                            <basePath>/motech-platform-server/module/tasks/api</basePath>
                            <info>
                                <title>Tasks REST API</title>
                                <version>${project.version}</version>
                                <description>REST API for Tasks module</description>
                                <license>
                                    <url>http://motechsuite.org/index.php/license</url>
                                    <name>MOTECH Platform Opensource License Agreement</name>
                                </license>
                            </info>
                            <swaggerDirectory>${swagger.location}</swaggerDirectory>
                        </apiSource>
                    </apiSources>
                </configuration>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>2.5</version>
                <executions>
                    <execution>
                        <id>clean-config</id>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                        <phase>clean</phase>
                        <configuration>
                            <excludeDefaultDirectories>true</excludeDefaultDirectories>
                            <filesets>
                                <fileset>
                                    <directory>${motech.dir}/config/org.motechproject.motech-tasks-bundle</directory>
                                    <includes>
                                        <include>**/*</include>
                                    </includes>
                                    <followSymlinks>false</followSymlinks>
                                </fileset>
                            </filesets>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>jslint-maven-plugin</artifactId>
                <version>1.0.1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>jslint</goal>
                        </goals>
                        <configuration>
                            <sourceJsFolder>../tasks/src/main/resources/webapp/js</sourceJsFolder>
                            <disallowIncrAndDecr>true</disallowIncrAndDecr>
                            <requireUseStrict>true</requireUseStrict>
                            <predefinedVars>
                                $, jQuery, angular, TasksDashboardCtrl, TasksManageCtrl, TasksLogCtrl, moment,
                                dummyHandler, window, innerLayout, cloneObj, isBlank, defaultLayout, rangy, BootstrapDialog
                            </predefinedVars>
                            <failOnIssues>${jslint.enable}</failOnIssues>
                            <excludes>
                                <exclude>rangy-core.js</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <configuration>
                    <instructions>
                        <Context-Path>tasks/api</Context-Path>
                        <Resource-Path>tasks</Resource-Path>
                        <Blueprint-Enabled>true</Blueprint-Enabled>
                        <Export-Package>
                            org.motechproject.tasks.annotations;version=${project.version},
                            org.motechproject.tasks.contract;version=${project.version},
                            org.motechproject.tasks.contract.builder;version=${project.version},
                            org.motechproject.tasks.contract.json;version=${project.version},
                            org.motechproject.tasks.domain;version=${project.version},
                            org.motechproject.tasks.domain.mds;version=${project.version},
                            org.motechproject.tasks.domain.mds.channel;version=${project.version},
                            org.motechproject.tasks.domain.mds.channel.builder;version=${project.version},
                            org.motechproject.tasks.domain.mds.task;version=${project.version},
                            org.motechproject.tasks.domain.mds.task.builder;version=${project.version},
                            org.motechproject.tasks.exception;version=${project.version},
                            org.motechproject.tasks.json;version=${project.version},
                            org.motechproject.tasks.repository;version=${project.version},
                            org.motechproject.tasks.service;version=${project.version},
                            org.motechproject.tasks.service.osgi;version=${project.version},
                            org.motechproject.tasks.util;version=${project.version},
                            org.motechproject.tasks.domain.enums;version=${project.version},
                            org.motechproject.tasks.dto;version=${project.version}
                        </Export-Package>
                        <Import-Package>
                            net.sf.cglib.core,
                            net.sf.cglib.proxy,
                            net.sf.cglib.reflect,
                            org.aopalliance.aop,
                            org.apache.commons.fileupload,
                            org.eclipse.gemini.blueprint.config,
                            org.motechproject.event.listener,
                            org.motechproject.event.listener.annotations,
                            org.motechproject.config.service,
                            org.springframework.aop,
                            org.springframework.aop.framework,
                            org.springframework.beans.factory.config,
                            org.springframework.beans.factory.xml,
                            org.springframework.cglib.core,
                            org.springframework.cglib.proxy,
                            org.springframework.cglib.reflect,
                            org.springframework.context.config,
                            org.springframework.security.core,
                            org.springframework.security.config,
                            org.springframework.transaction,
                            org.springframework.validation.beanvalidation,
                            org.springframework.web.multipart.commons,
                            org.springframework.web.servlet.config,
                            *
                        </Import-Package>
                        <Bundle-DocURL>
                            http://docs.motechproject.org/en/latest/get_started/using_tasks/using_tasks.html
                        </Bundle-DocURL>
                    </instructions>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-bundles</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${motech.dir}/bundles</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>target</directory>
                                    <includes>
                                        <include>*.jar</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-module-js</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/jasmine/js</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources/webapp/js</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-platform-js</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/jasmine/js/core</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${modules.root.dir}/platform/server-bundle/src/main/resources/webapp/lib</directory>
                                </resource>
                                <resource>
                                    <directory>${modules.root.dir}/platform/server-bundle/src/main/resources/webapp/js</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-jasmine-spec-lib</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/jasmine/spec/lib</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${modules.root.dir}/platform/server-bundle/src/main/resources/webapp/lib/angular</directory>
                                    <includes>
                                        <inlude>angular.min.js</inlude>
                                    </includes>
                                </resource>
                                <resource>
                                    <directory>${modules.root.dir}/platform/server-bundle/src/test/resources/lib</directory>
                                    <includes>
                                        <include>angular-mocks.js</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-jasmine-spec</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/jasmine/spec/spec</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/test/resources/jasmine</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.github.searls</groupId>
                <artifactId>jasmine-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>
