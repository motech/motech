#macro( updateActionParams $entity $idRequired )
            "actionParameters": [
                {
                    "displayName": "Entity Class",
                    "key": "@ENTITY",
                    "value": "$entity.className",
                    "type": "UNICODE",
                    "required": true,
                    "hidden": true
                },
                {
                    "key": "id",
                    "displayName": "Id",
                    "type": "LONG",
                    "required": $idRequired
                }
                #foreach ( $field in $entity.nonAutoFieldInfos ) ,
                {
                    "key": "$field.name",
                    "displayName": "$field.displayName",
                    "type": "$field.taskType",
                    "required": #if( "id" == $field.name ) true #else false #end,
                    "options" : #if( $field.taskType.equals("SELECT") ) [ #setOptions( $field.typeInfo.items ) ] #else [] #end
                }
                #end
            ]
#end

#macro( setOptions $options )
            #foreach ( $option in $options )
            "$option"#if( $velocityHasNext ),#end
            #end
#end

#set( $triggerParams = '"eventParameters": [
      {
          "displayName": "Entity Name",
          "eventKey": "entity_name",
          "type": "UNICODE"
      },
      {
          "displayName": "Entity Class",
          "eventKey": "entity_class",
          "type": "UNICODE"
      },
      {
          "eventKey": "object_id",
          "displayName": "Id",
          "type": "LONG"
      }
    ]' )
{
    "displayName": "data-services",
    "triggerTaskEvents": [
        #foreach ( $entity in $Entity.entitiesWithAnyCRUDAction($list) )

        #if ($entity.createEventFired)
        {
            "displayName": "CREATE $entity.entityName",
            "subject": "$CrudEventBuilder.createSubject($entity, 'CREATE')",
            $triggerParams
        }#if ( $entity.updateEventFired || $entity.deleteEventFired ),#end #end

        #if ($entity.updateEventFired)
        {
            "displayName": "UPDATE $entity.entityName",
            "subject": "$CrudEventBuilder.createSubject($entity, 'UPDATE')",
            $triggerParams
        }#if ( $entity.deleteEventFired ),#end #end

        #if ( $entity.deleteEventFired )
        {
            "displayName": "DELETE $entity.entityName",
            "subject": "$CrudEventBuilder.createSubject($entity, 'DELETE')",
            $triggerParams
        }#end #if ( $velocityHasNext ),#end
        #end
    ],
    "actionTaskEvents": [
        #foreach ( $entity in $list )
        {
            "name": "${entity.className}.create",
            "displayName": "CREATE $entity.entityName",
            "serviceInterface": "org.motechproject.mds.service.ActionHandlerService",
            "serviceMethod": "create",
            "serviceMethodCallManner": "MAP",
            "actionParameters": [
                {
                    "displayName": "Entity Class",
                    "key": "@ENTITY",
                    "value": "$entity.className",
                    "type": "UNICODE",
                    "required": true,
                    "hidden": true
                },
                #foreach ( $field in $entity.nonAutoFieldInfos )
                {
                    "key": "$field.name",
                    "displayName": "$field.displayName",
                    "type": "$field.taskType",
                    "required": $field.required,
                    "options" : #if( $field.taskType.equals("SELECT") ) [ #setOptions( $field.typeInfo.items ) ] #else [] #end
                }#if ( $velocityHasNext ),#end
                #end
            ]
        },
        {
            "name": "${entity.className}.update",
            "displayName": "UPDATE $entity.entityName",
            "serviceInterface": "org.motechproject.mds.service.ActionHandlerService",
            "serviceMethod": "update",
            "serviceMethodCallManner": "MAP",
            #updateActionParams( $entity true )
        },
        {
            "name": "${entity.className}.createOrUpdate",
            "displayName": "CREATE / UPDATE $entity.entityName",
            "serviceInterface": "org.motechproject.mds.service.ActionHandlerService",
            "serviceMethod": "createOrUpdate",
            "serviceMethodCallManner": "MAP",
            #updateActionParams( $entity false )
        },
        {
            "name": "${entity.className}.queryAndUpdate",
            "displayName": "QUERY AND UPDATE $entity.entityName",
            "serviceInterface": "org.motechproject.mds.service.ActionHandlerService",
            "serviceMethod": "queryAndUpdate",
            "serviceMethodCallManner": "MAP",
            "actionParameters": [
                {
                    "displayName": "Entity Class",
                    "key": "@ENTITY",
                    "value": "$entity.className",
                    "type": "UNICODE",
                    "required": true,
                    "hidden": true
                },
                #foreach ( $field in $entity.nonAutoFieldInfos )
                {
                    "key": "$field.name",
                    "displayName": "$field.displayName",
                    "type": "$field.taskType",
                    "required": false,
                    "hidden": $field.unique
                }#if ( $velocityHasNext ),#end
                #end
            ]
        },
        {
            "name": "${entity.className}.delete",
            "displayName": "DELETE $entity.entityName",
            "serviceInterface": "org.motechproject.mds.service.ActionHandlerService",
            "serviceMethod": "delete",
            "serviceMethodCallManner": "MAP",
            "actionParameters": [
                {
                    "displayName": "Entity Class",
                    "key": "@ENTITY",
                    "value": "$entity.className",
                    "type": "UNICODE",
                    "required": true,
                    "hidden": true
                },
                {
                    "key": "id",
                    "displayName": "Id",
                    "type": "LONG",
                    "required": true
                }
            ]
        }#if ( $velocityHasNext ),#end
        #end
    ]
}